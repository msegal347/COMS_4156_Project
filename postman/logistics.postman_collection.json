{
	"info": {
		"_postman_id": "1f2ab405-2402-496e-943d-b3d5ff1d5037",
		"name": "Logistics",
		"description": "### Overview\n\nThis collection specifically tests the creation, retrieval, updating, and deletion of logistics routes.\n\n### API Endpoints\n\n#### POST /api/logistics/\n\nCreates a new logistics route. Responds with HTTP status code `201 Created` upon successful creation.\n\n**Tests included:**\n\n- Assert that the status code is `201`.\n    \n- Assert that the response JSON includes an `origin` property and cache the created route's `_id` for further tests.\n    \n\n#### GET /api/logistics/:id\n\nFetches a logistics route by its `_id`. Responds with HTTP status code `200 OK` if the route exists.\n\n**Tests included:**\n\n- Assert that the status code is `200`.\n    \n- Assert that the response JSON includes an `origin` property.\n    \n\n#### PUT /api/logistics/:id\n\nUpdates an existing logistics route identified by `_id`. Responds with HTTP status code `200 OK` if the update is successful.\n\n**Tests included:**\n\n- Assert that the status code is `200`.\n    \n- Assert that the `origin` property in the response is updated to `Updated Origin`.\n    \n\n#### DELETE /api/logistics/:id\n\nDeletes a logistics route by its `_id`. Responds with HTTP status code `204 No Content` upon successful deletion.\n\n**Tests included:**\n\n- Assert that the status code is `204`.\n    \n\n### Data Model\n\nThe logistics route object is specified as:\n\n- `origin` (String): Origin location for the logistics route.\n    \n- `destinations` (Array of Strings): Array containing one or more destination locations.\n    \n\n### Unique Constraints\n\n- The `origin` attribute should be unique amongst all routes. Attempting to create a route with a duplicate origin will yield HTTP status code `400 Bad Request`.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30606958"
	},
	"item": [
		{
			"name": "POST /api/logistics/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 201', function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test('Response has origin property', function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('origin');",
							"    pm.globals.set('createdRouteId', jsonData._id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"origin\": \"New York\",\n  \"destinations\": [\"San Francisco\", \"Los Angeles\"]\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/logistics/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"logistics",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /api/logistics/:id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test('Response has origin property', function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('origin');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/logistics/{{createdRouteId}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"logistics",
						"{{createdRouteId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT /api/logistics/:id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test('Origin is updated', function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.origin).to.eql('Updated Origin');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"origin\": \"Updated Origin\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/logistics/{{createdRouteId}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"logistics",
						"{{createdRouteId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE /api/logistics/:id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 204', function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/logistics/{{createdRouteId}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"logistics",
						"{{createdRouteId}}"
					]
				}
			},
			"response": []
		}
	]
}